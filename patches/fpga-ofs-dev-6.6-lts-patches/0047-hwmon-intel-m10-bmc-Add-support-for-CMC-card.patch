From 314554c495229a96e77930d0a3035764a286b6b4 Mon Sep 17 00:00:00 2001
From: Krishna Kumar S R <simmadhari.ramadass.krishna.kumar@intel.com>
Date: Tue, 8 Aug 2023 23:14:41 +0530
Subject: [PATCH] hwmon: intel-m10-bmc: Add support for CMC card

Add hardware monitor support for CMC card.

Signed-off-by: Krishna Kumar S R <simmadhari.ramadass.krishna.kumar@intel.com>
---
 drivers/hwmon/intel-m10-bmc-hwmon.c | 137 ++++++++++++++++++++++++++++
 1 file changed, 137 insertions(+)

diff --git a/drivers/hwmon/intel-m10-bmc-hwmon.c b/drivers/hwmon/intel-m10-bmc-hwmon.c
index 1dc6a1db5b4e..fc892403c8e8 100644
--- a/drivers/hwmon/intel-m10-bmc-hwmon.c
+++ b/drivers/hwmon/intel-m10-bmc-hwmon.c
@@ -821,6 +821,139 @@ static const struct m10bmc_hwmon_board_data c6100bmc_hwmon_bdata = {
 	.hinfo = c6100bmc_hinfo,
 };
 
+static const struct m10bmc_sdata cmcbmc_temp_tbl[] = {
+	{ 0x440, 0x0, 0x0, 0x0, 0x0, 500, "FPGA R-TILE Max Temperature" },
+	{ 0x444, 0x448, 0x44c, 0x0, 0x0, 500, "FPGA R-TILE Temperature #1" },
+	{ 0x450, 0x454, 0x458, 0x0, 0x0, 500, "FPGA R-TILE Temperature #2" },
+	{ 0x45c, 0x460, 0x464, 0x0, 0x0, 500, "FPGA R-TILE Temperature #3" },
+	{ 0x468, 0x46c, 0x470, 0x0, 0x0, 500, "FPGA R-TILE Temperature #4" },
+	{ 0x474, 0x478, 0x47C, 0x0, 0x0, 500, "FPGA R-TILE Temperature #5" },
+	{ 0x480, 0x484, 0x488, 0x0, 0x0, 500, "FPGA R-TILE Temperature #6" },
+	{ 0x48C, 0x0, 0x0, 0x0, 0x0, 500, "FPGA F-TILE Max Temperature" },
+	{ 0x490, 0x494, 0x498, 0x0, 0x0, 500, "FPGA F-TILE Temperature #1" },
+	{ 0x49C, 0x4A0, 0x4A4, 0x0, 0x0, 500, "FPGA F-TILE Temperature #2" },
+	{ 0x4A8, 0x4AC, 0x4B0, 0x0, 0x0, 500, "FPGA F-TILE Temperature #3" },
+	{ 0x4B4, 0x4B8, 0x4BC, 0x0, 0x0, 500, "FPGA F-TILE Temperature #4" },
+	{ 0x4C0, 0x4C4, 0x4C8, 0x0, 0x0, 500, "FPGA F-TILE Temperature #5" },
+	{ 0x4CC, 0x0, 0x0, 0x0, 0x0, 500, "FPGA FABRIC Max Temperature" },
+	{ 0x4D0, 0x4D4, 0x4D8, 0x0, 0x0, 500, "FPGA FABRIC Digital Temperature#1" },
+	{ 0x4DC, 0x4E0, 0x4E4, 0x0, 0x0, 500, "FPGA FABRIC Digital Temperature#2" },
+	{ 0x4E8, 0x4EC, 0x4F0, 0x0, 0x0, 500, "FPGA FABRIC Digital Temperature#3" },
+	{ 0x4F4, 0x4F8, 0x4FC, 0x0, 0x0, 500, "FPGA FABRIC Digital Temperature#4" },
+	{ 0x500, 0x504, 0x508, 0x0, 0x0, 500, "FPGA FABRIC Digital Temperature#5" },
+	{ 0x50C, 0x510, 0x514, 0x0, 0x0, 500, "FPGA FABRIC Remote Digital Temperature#1" },
+	{ 0x518, 0x51C, 0x520, 0x0, 0x0, 500, "FPGA FABRIC Remote Digital Temperature#2" },
+	{ 0x524, 0x528, 0x52C, 0x0, 0x0, 500, "FPGA FABRIC Remote Digital Temperature#3" },
+	{ 0x530, 0x534, 0x538, 0x0, 0x0, 500, "FPGA FABRIC Remote Digital Temperature#4" },
+	{ 0x588, 0x58C, 0x590, 0x0, 0x0, 500, "FPGA Core A (SDM) Temperature [Remote]" },
+	{ 0x594, 0x598, 0x59C, 0x0, 0x0, 500, "FPGA Core C Temperature [Remote]" },
+	{ 0x5A0, 0x5A4, 0x5A8, 0x0, 0x0, 500, "FPGA F-Tile Temperature [Remote]" },
+	{ 0x5AC, 0x5B0, 0x5B4, 0x0, 0x0, 500, "Board Temperature #1" },
+	{ 0x5D0, 0x5D4, 0x5D8, 0x0, 0x0, 500, "FPGA R-Tile 14C Temperature [Remote]" },
+	{ 0x5DC, 0x5E0, 0x5E4, 0x0, 0x0, 500, "FPGA R-Tile 15C Temperature [Remote]" },
+	{ 0x5F4, 0x5F8, 0x5FC, 0x0, 0x0, 500, "Board Temperature #2" },
+	{ 0x600, 0x0, 0x0, 0x0, 0x0, 500, "FPGA VCC_HSSI_GXR VR Temperature" },
+	{ 0x60C, 0x0, 0x0, 0x0, 0x0, 500, "FPGA VCCR_CORE VR Temperature" },
+	{ 0x618, 0x0, 0x0, 0x0, 0x0, 500, "FPGA VCC_HSSI_GXF Temperature" },
+	{ 0x728, 0x72C, 0x730, 0x0, 0x0, 500, "FPGA Virtual Sensor Temperature" },
+};
+
+static const struct m10bmc_sdata cmcbmc_in_tbl[] = {
+	{ 0x624, 0x0, 0x0, 0x0, 0x0, 1, "FPGA VCC_HSSI_GXR Rail Voltage" },
+	{ 0x63c, 0x0, 0x0, 0x0, 0x0, 1, "FPGA VCCR_CORE Rail Voltage" },
+	{ 0x654, 0x0, 0x0, 0x0, 0x0, 1, "FPGA VCC_HSSI_GXF Rail Voltage" },
+};
+
+static const struct m10bmc_sdata cmcbmc_curr_tbl[] = {
+	{ 0x630, 0x0, 0x0, 0x0, 0x0, 1, "FPGA VCC_HSSI_GXR Voltage Rail Current" },
+	{ 0x648, 0x0, 0x0, 0x0, 0x0, 1, "FPGA VCCR_CORE Voltage Rail Current" },
+	{ 0x660, 0x0, 0x0, 0x0, 0x0, 1, "FPGA VCC_HSSI_GXF Voltage Rail Current" },
+};
+
+static const struct hwmon_channel_info *cmcbmc_hinfo[] = {
+	HWMON_CHANNEL_INFO(temp,
+			HWMON_T_INPUT | HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+			HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+			HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+			HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+			HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+			HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+			HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+			HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+			HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+			HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_LABEL,
+			HWMON_T_INPUT | HWMON_T_MAX | HWMON_T_CRIT |
+				HWMON_T_LABEL),
+			HWMON_CHANNEL_INFO(in,
+					HWMON_I_INPUT | HWMON_I_LABEL,
+					HWMON_I_INPUT | HWMON_I_LABEL,
+					HWMON_I_INPUT | HWMON_I_LABEL),
+			HWMON_CHANNEL_INFO(curr,
+					HWMON_C_INPUT | HWMON_C_LABEL,
+					HWMON_C_INPUT | HWMON_C_LABEL,
+					HWMON_C_INPUT | HWMON_C_LABEL),
+			NULL
+};
+static const struct m10bmc_hwmon_board_data cmcbmc_hwmon_bdata = {
+	.tables = {
+		[hwmon_temp] = cmcbmc_temp_tbl,
+		[hwmon_in] = cmcbmc_in_tbl,
+		[hwmon_curr] = cmcbmc_curr_tbl,
+	},
+
+	.hinfo = cmcbmc_hinfo,
+};
+
 static umode_t
 m10bmc_hwmon_is_visible(const void *data, enum hwmon_sensor_types type,
 			u32 attr, int channel)
@@ -1042,6 +1175,10 @@ static const struct platform_device_id intel_m10bmc_hwmon_ids[] = {
 		.name = "c6100bmc-hwmon",
 		.driver_data = (unsigned long)&c6100bmc_hwmon_bdata,
 	},
+	{
+		.name = "cmcbmc-hwmon",
+		.driver_data = (unsigned long)&cmcbmc_hwmon_bdata,
+	},
 	{ }
 };
 
